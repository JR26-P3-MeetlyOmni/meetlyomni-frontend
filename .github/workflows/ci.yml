name: CI Pipeline

on:
  pull_request:
    branches:
      - dev
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: development

      - name: Run Tests
        run: npm run test
        env:
          NODE_ENV: development

      - name: Run Lint
        run: npm run lint
        env:
          NODE_ENV: development

      - name: Build Project
        run: npm run build
        env:
          NODE_ENV: production
          NEXT_PUBLIC_API_BASE_URL: ${{ vars.NEXT_PUBLIC_API_BASE_URL }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: |
          docker build \
            --build-arg NEXT_PUBLIC_API_BASE_URL=${{ vars.NEXT_PUBLIC_API_BASE_URL }} \
            --build-arg NODE_ENV=production \
            -t ${{ vars.IMAGE_NAME }}:latest .

      - name: Push Docker Image to ECR
        run: |
          docker tag ${{ vars.IMAGE_NAME }}:latest ${{ vars.ECR_REGISTRY }}/${{ vars.IMAGE_NAME }}:latest
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.IMAGE_NAME }}:latest
